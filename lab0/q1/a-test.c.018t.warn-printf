
;; Function fibonacci (fibonacci, funcdef_no=0, decl_uid=2345, cgraph_uid=1, symbol_order=0)

int fibonacci (int n)
{
  int i;
  int c;
  int b;
  int a;
  int D.2361;

  <bb 2> :
  if (n <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.2361 = n;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 4> :
  a = 0;
  b = 1;
  i = 2;
  goto <bb 6>; [INV]

  <bb 5> :
  c = a + b;
  a = b;
  b = c;
  i = i + 1;

  <bb 6> :
  if (i <= n)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.2361 = b;

  <bb 8> :
<L5>:
  return D.2361;

}



;; Function main (main, funcdef_no=1, decl_uid=2355, cgraph_uid=2, symbol_order=1)

test.c:31: printf: objsize = 9223372036854775807, fmtstr = "The %dth Fibonacci number is: %d
"
  Directive 1 at offset 0: "The ", length = 4
    Result: 4, 4, 4, 4 (4, 4, 4, 4)
  Directive 2 at offset 4: "%d"
    Result: 1, 1, 11, 11 (5, 5, 15, 15)
  Directive 3 at offset 6: "th Fibonacci number is: ", length = 24
    Result: 24, 24, 24, 24 (29, 29, 39, 39)
  Directive 4 at offset 30: "%d"
    Result: 1, 1, 11, 11 (30, 30, 50, 50)
  Directive 5 at offset 32: "
", length = 1
    Result: 1, 1, 1, 1 (31, 31, 51, 51)
  Directive 6 at offset 33: "", length = 1
test.c:32: printf: objsize = 9223372036854775807, fmtstr = "SQUARE(%d) = %d
"
  Directive 1 at offset 0: "SQUARE(", length = 7
    Result: 7, 7, 7, 7 (7, 7, 7, 7)
  Directive 2 at offset 7: "%d"
    Result: 1, 1, 11, 11 (8, 8, 18, 18)
  Directive 3 at offset 9: ") = ", length = 4
    Result: 4, 4, 4, 4 (12, 12, 22, 22)
  Directive 4 at offset 13: "%d"
    Result: 1, 1, 11, 11 (13, 13, 33, 33)
  Directive 5 at offset 15: "
", length = 1
    Result: 1, 1, 1, 1 (14, 14, 34, 34)
  Directive 6 at offset 16: "", length = 1
int main ()
{
  int n;
  int D.2363;

  <bb 2> :
  n = 10;
  _1 = fibonacci (n);
  printf ("The %dth Fibonacci number is: %d\n", n, _1);
  _2 = n * n;
  printf ("SQUARE(%d) = %d\n", n, _2);
  D.2363 = 0;

  <bb 3> :
<L0>:
  return D.2363;

}


